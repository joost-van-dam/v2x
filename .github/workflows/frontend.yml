name: Frontend CI / CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: "20"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  ci:
    name: 🧪 CI – lint + tests + Sonar
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      # ---------- Node tool-chain ----------
      - name: ⎔ Setup Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install deps
        working-directory: frontend
        run: npm ci

      - name: 🔍 ESLint
        working-directory: frontend
        run: npx eslint "src/**/*.{ts,tsx}"

      - name: 🧪 Unit tests (Vitest / Jest)
        working-directory: frontend
        run: |
          # zet je eigen test-runner in
          npx vitest run --coverage

      - name: 🔎 Sonar analyse
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  cd:
    name: 🚀 CD – build + push Docker image
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      # ---------- Log-in op container-registry ----------
      - name: 🔑 Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # ---------- Build (vite build) ----------
      - name: 🏗️  Build static assets
        working-directory: frontend
        run: npm run build

      # ---------- Containerise (nginx serve) ----------
      - name: 🐳 Build & push image
        uses: docker/build-push-action@v5
        with:
          context: frontend
          file: frontend/Dockerfile   # zie opm. hieronder
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
