  name: backend-ci

  on:
    push:
      paths:
        - "backend/**"
        - ".github/workflows/backend-ci.yml"
    pull_request:
      paths:
        - "backend/**"
        - ".github/workflows/backend-ci.yml"
    workflow_dispatch:
  
  jobs:
    tests:
      name: Run tests
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout repo
          uses: actions/checkout@v3
  
        - name: Set up Python 3.12
          uses: actions/setup-python@v4
          with:
            python-version: "3.12"
            cache: "pip"
  
        - name: Install backend dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r backend/requirements.txt
            pip install pytest           # ‚Üê voeg hier extra test-tools toe
  
        - name: Run pytest
          run: |
            pytest -q
          env:
            PYTHONPATH: "./backend"      # zodat import-paden kloppen

    sonar:
      name: SonarCloud Scan
      runs-on: ubuntu-latest
      needs: tests
  
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0        # vereist door SonarCloud voor volledige historie
  
        - name: Set up Java (SonarScanner)
          uses: actions/setup-java@v3
          with:
            distribution: temurin
            java-version: "11"
  
        - name: Cache SonarCloud packages
          uses: actions/cache@v3
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
  
        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          with:
            projectBaseDir: backend
            organization: joost        # jouw org key in SonarCloud
            token: ${{ secrets.SONAR_TOKEN }}

    docker-build:
      name: Build Docker image
      runs-on: ubuntu-latest
      needs: tests                      # alleen uitvoeren na succesvolle tests
  
      steps:
        - name: Checkout repo
          uses: actions/checkout@v3
  
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
  
        - name: Build backend image
          run: |
            docker build -t csms-backend:ci backend
  