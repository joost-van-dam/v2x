name: backend-ci

on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yml"
  workflow_dispatch:

jobs:
  tests:
    name: Run tests & collect coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-cov

      - name: Run pytest with coverage
        working-directory: backend
        run: |
          mkdir -p TestResults
          pytest --cov=. \
                 --cov-report=xml:TestResults/coverage.xml \
                 --cov-config=../.coveragerc

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: backend/TestResults/coverage.xml

  sonar:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: backend/TestResults

      - name: Set up Java (for SonarCloud)
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "11"

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          organization: joost                    # jouw SonarCloud-organisatie
          projectKey: joost_v2x                  # jouw SonarCloud-projectkey
          projectBaseDir: backend               # we scannen enkel de “backend” folder
          token: ${{ secrets.SONAR_TOKEN }}
          extraProperties: |
            # Python-coverage rapport, relatief t.o.v. backend/
            sonar.python.coverage.reportPaths=TestResults/coverage.xml
            # sluit testbestanden uit van de hoofdbron (optioneel)
            sonar.exclusions=tests/**

  docker-build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        run: |
          docker build -t csms-backend:ci backend
