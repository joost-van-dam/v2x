name: backend-ci

on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yml"
  workflow_dispatch:

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-cov

      - name: Run pytest with coverage
        # Vanuit de repo-root, meet alles onder backend/
        run: |
          pytest \
            --cov=backend \
            --cov-report=xml:backend/coverage.xml \
            --cov-config=.coveragerc

  sonar:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "11"

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Run SonarCloud analysis
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          # Let op: baseDir is de ROOT van je repo, niet `backend`
          projectBaseDir: .
          args: >-
            -Dsonar.organization=joost
            -Dsonar.projectKey=joost_v2x
            # Specificeer w치치r je product-code staat:
            -Dsonar.sources=backend/application,backend/domain,backend/infrastructure,backend/routes,backend/services
            # En w치치r je tests staan:
            -Dsonar.tests=backend/tests
            # Wijs naar het door pytest gemaakte report
            -Dsonar.python.coverage.reportPaths=backend/coverage.xml
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        run: |
          docker build -t csms-backend:ci backend
